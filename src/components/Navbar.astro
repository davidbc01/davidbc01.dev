<header>
    <nav class="bg-transparent p-4 rounded-lg mt-0 mb-4 mx-6">
        <div class="container mx-auto flex justify-center items-center text-sm font-medium">
            <div class="lg:flex items-center space-x-4">
                <a href="#sobre-mi" class="text-black dark:text-white hover:text-blue-500 dark:hover:text-blue-500 cursor-none">Sobre mí</a>
                <a href="#experiencia" class="text-black dark:text-white hover:text-blue-500 dark:hover:text-blue-500 cursor-none">Experiencia</a>
                <a href="#proyectos" class="text-black dark:text-white hover:text-blue-500 dark:hover:text-blue-500 cursor-none">Proyectos</a>
                <a href="#contacto" class="text-black dark:text-white hover:text-blue-500 dark:hover:text-blue-500 cursor-none">Contacto</a>
                <a id="darkModeBtn" class="bg-inherit w-8 h-8 rounded flex items-center justify-center transition-transform transform-gpu hover:scale-125">
                    <svg class="w-[16px] h-[16px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 3V1m0 18v-2M5.05 5.05 3.636 3.636m12.728 12.728L14.95 14.95M3 10H1m18 0h-2M5.05 14.95l-1.414 1.414M16.364 3.636 14.95 5.05M14 10a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z"></path>
                    </svg>
                </a>
            </div>
        </div>
    </nav>
</header>
<script>
    /*-Script para el modo oscuro usando tailwind-*/
    document.addEventListener("DOMContentLoaded", function () {
        const btnDarkMode = document.getElementById("darkModeBtn");
        const htmlElement = document.documentElement;

        // Función para actualizar el modo oscuro
        function updateDarkMode() {
            if (
                localStorage.theme === "dark" ||
                (!("theme" in localStorage) &&
                    window.matchMedia("(prefers-color-scheme: dark)").matches)
            ) {
                htmlElement.classList.add("dark");
                setDarkModeIcon();
            } else {
                htmlElement.classList.remove("dark");
                setLightModeIcon();
            }
        }

        // Función para establecer el ícono en modo oscuro
        function setDarkModeIcon() {
            if (btnDarkMode) {
                btnDarkMode.innerHTML = `
                <svg class="w-[16px] h-[16px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 3V1m0 18v-2M5.05 5.05 3.636 3.636m12.728 12.728L14.95 14.95M3 10H1m18 0h-2M5.05 14.95l-1.414 1.414M16.364 3.636 14.95 5.05M14 10a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z"/>
                </svg>
                `;
            }
        }

        // Función para establecer el ícono en modo claro
        function setLightModeIcon() {
            if (btnDarkMode) {
                btnDarkMode.innerHTML = `
                <svg class="w-[16px] h-[16px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.509 5.75c0-1.493.394-2.96 1.144-4.25h-.081a8.5 8.5 0 1 0 7.356 12.746A8.5 8.5 0 0 1 8.509 5.75Z"/>
                </svg>
                `;
            }
        }

        // Verificar y actualizar el modo oscuro en la carga de la página
        updateDarkMode();

        // Escuchar cambios en la preferencia de color del sistema operativo directamente
        const colorSchemeQuery = window.matchMedia(
            "(prefers-color-scheme: dark)",
        );

        // Función para manejar el cambio en la preferencia de color del sistema operativo
        function handleColorSchemeChange(event: MediaQueryListEvent) {
            updateDarkMode();
        }

        // Suscribir la función al evento de cambio
        colorSchemeQuery.addListener(handleColorSchemeChange);

        // Toggle dark mode en el botón
        if (btnDarkMode) {
            btnDarkMode.addEventListener("click", () => {
                if (htmlElement.classList.contains("dark")) {
                    htmlElement.classList.remove("dark");
                    localStorage.theme = "light";
                    setLightModeIcon();
                } else {
                    htmlElement.classList.add("dark");
                    localStorage.theme = "dark";
                    setDarkModeIcon();
                }
            });
        }
    });
</script>
